{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/springboot-crud-rest/api/v1/employees';\n  }\n  getEmployee(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  createEmployee(employee) {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n  updateEmployee(id, value) {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      responseType: 'text'\n    });\n  }\n  getEmployeesList() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});\nexport { EmployeeService };","map":{"version":3,"names":["HttpClient","EmployeeService","constructor","http","baseUrl","getEmployee","id","get","createEmployee","employee","post","updateEmployee","value","put","deleteEmployee","delete","responseType","getEmployeesList","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["/Users/mac/Downloads/EmployeeManagementProject/angular8-springboot-client/src/app/employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseUrl = 'http://localhost:8080/springboot-crud-rest/api/v1/employees';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;;AAGjD,MAGaC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,6DAA6D;EAEvC;EAExCC,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,IAAIE,EAAE,EAAE,CAAC;EAC/C;EAEAE,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,EAAE,EAAEK,QAAQ,CAAC;EACpD;EAEAE,cAAcA,CAACL,EAAU,EAAEM,KAAU;IACnC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIE,EAAE,EAAE,EAAEM,KAAK,CAAC;EACtD;EAEAE,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACH,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIE,EAAE,EAAE,EAAE;MAAEU,YAAY,EAAE;IAAM,CAAE,CAAC;EAC5E;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACd,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,EAAE,CAAC;EACzC;;;mBAxBWH,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAApB,UAAA;AAAA;;SAAfC,eAAe;EAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPtB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}